import matplotlib.pyplot as plt
import numpy as np
import target_driver
import target_io

####parameters to change####
outdir = "/home/cta/luigi/CHECS-TM/data/20170502/trigdelay_scan3/"
fileroot ="events_dly{0:04d}.tio"

NChannels = 48

############################
for dly in np.arange(0,4095,128):
    fig = plt.figure()
    # create the reader object
    reader = target_io.EventFileReader(outdir+fileroot.format(dly))
    NEvents = reader.GetNEvents()
    print "number of events", NEvents

    # create the plot
    ax = plt.subplot(111)
    ax.set_xlabel("sample", fontsize=14)
    ax.set_ylabel("raw ADC counts", fontsize=14)
    ax.set_title("Delay {} ns".format(dly))

    imin = 0
    for ievt in range(imin,NEvents):
        for channel in range(NChannels):
            rawdata = reader.GetEventPacket(ievt, channel)  # second entry is 16*asic+channel
            packet = target_driver.DataPacket()
            packet.Assign(rawdata, reader.GetPacketSize())
            wf = packet.GetWaveform(0)
            if ievt == imin and channel ==0:
                NSamples = wf.GetSamples()
                adc = np.zeros([NEvents, NChannels, NSamples], dtype=np.uint16)
                print "number of samples per waveform", NSamples
            adc[ievt,channel] = wf.GetADCArray(NSamples)
            ax.plot(adc[ievt,channel], alpha=0.7)
    fig.savefig(outdir+"WF_dly{0:04d}.png".format(dly))
    del adc
